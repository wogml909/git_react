{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zz909\\\\git\\\\react\\\\React_TJE\\\\board\\\\client\\\\src\\\\containers\\\\BoardUpdateContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport * as boards from '../apis/boards';\nimport BoardUpdateForm from '../components/BoardUpdate/BoardUpdateForm';\n\n// 👩‍💻 게시글 수정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardUpdateContainer = () => {\n  _s();\n  const {\n    no\n  } = useParams();\n  const [board, setBoard] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const onUpdate = async (no, title, writer, content) => {\n    try {\n      const response = await boards.update(no, title, writer, content);\n      console.log(response.data);\n      alert('수정 완료');\n\n      // ➡ 게시글 목록 이동\n      navigate('/boards');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const getBoard = async () => {\n    setLoading(true);\n    try {\n      const response = await boards.select(no);\n      const data = response.data;\n      console.log(data);\n      setBoard(data);\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n  const onDelete = async no => {\n    const response = await boards.remove(no);\n    console.log(response.data);\n    alert('삭제 완료');\n\n    // ➡ 게시글 목록 이동\n    navigate('/boards');\n  };\n  useEffect(() => {\n    getBoard();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BoardUpdateForm, {\n    no: no,\n    board: board,\n    onUpdate: onUpdate,\n    onDelete: onDelete,\n    isLoading: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n};\n_s(BoardUpdateContainer, \"RYRDQSqCqDj6u45D1KJLWSVMjRs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardUpdateContainer;\nexport default BoardUpdateContainer;\nvar _c;\n$RefreshReg$(_c, \"BoardUpdateContainer\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","boards","BoardUpdateForm","jsxDEV","_jsxDEV","BoardUpdateContainer","_s","no","board","setBoard","isLoading","setLoading","navigate","onUpdate","title","writer","content","response","update","console","log","data","alert","e","getBoard","select","onDelete","remove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zz909/git/react/React_TJE/board/client/src/containers/BoardUpdateContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport * as boards from '../apis/boards'\r\nimport BoardUpdateForm from '../components/BoardUpdate/BoardUpdateForm';\r\n\r\n// 👩‍💻 게시글 수정\r\nconst BoardUpdateContainer = () => {  \r\n    const { no } = useParams();\r\n\r\n    const [board, setBoard] = useState({})\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const onUpdate = async (no, title, writer, content) => {\r\n        try {\r\n            const response = await boards.update(no, title, writer, content)\r\n            console.log(response.data);\r\n            alert('수정 완료')\r\n\r\n            // ➡ 게시글 목록 이동\r\n            navigate('/boards')\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const getBoard = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const response = await boards.select(no);\r\n            const data = response.data;\r\n            console.log(data);\r\n            setBoard(data);\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const onDelete = async (no) => {\r\n        const response = await boards.remove(no);\r\n        console.log(response.data);\r\n        alert('삭제 완료')\r\n\r\n        // ➡ 게시글 목록 이동\r\n        navigate('/boards')\r\n    }\r\n\r\n    useEffect( () => {\r\n        getBoard()\r\n    },[])\r\n\r\n    return (<BoardUpdateForm no={no} \r\n                             board={board} \r\n                             onUpdate={onUpdate}\r\n                             onDelete={onDelete}\r\n                             isLoading={isLoading}\r\n                              />)\r\n}\r\n\r\nexport default BoardUpdateContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,OAAO,KAAKC,MAAM,MAAM,gBAAgB;AACxC,OAAOC,eAAe,MAAM,2CAA2C;;AAEvE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,QAAQ,GAAG,MAAAA,CAAON,EAAE,EAAEO,KAAK,EAAEC,MAAM,EAAEC,OAAO,KAAK;IACnD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,MAAM,CAACiB,MAAM,CAACX,EAAE,EAAEO,KAAK,EAAEC,MAAM,EAAEC,OAAO,CAAC;MAChEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BC,KAAK,CAAC,OAAO,CAAC;;MAEd;MACAV,QAAQ,CAAC,SAAS,CAAC;IACvB,CAAC,CAAC,OAAMW,CAAC,EAAE;MACPJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;IAClB;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzBb,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMhB,MAAM,CAACwB,MAAM,CAAClB,EAAE,CAAC;MACxC,MAAMc,IAAI,GAAGJ,QAAQ,CAACI,IAAI;MAC1BF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBZ,QAAQ,CAACY,IAAI,CAAC;IAClB,CAAC,CACD,OAAME,CAAC,EAAE;MACLJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;IAClB;IACAZ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMe,QAAQ,GAAG,MAAOnB,EAAE,IAAK;IAC3B,MAAMU,QAAQ,GAAG,MAAMhB,MAAM,CAAC0B,MAAM,CAACpB,EAAE,CAAC;IACxCY,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1BC,KAAK,CAAC,OAAO,CAAC;;IAEd;IACAV,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC;EAEDhB,SAAS,CAAE,MAAM;IACb4B,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAQpB,OAAA,CAACF,eAAe;IAACK,EAAE,EAAEA,EAAG;IACPC,KAAK,EAAEA,KAAM;IACbK,QAAQ,EAAEA,QAAS;IACnBa,QAAQ,EAAEA,QAAS;IACnBhB,SAAS,EAAEA;EAAU;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAChC,CAAC;AAAAzB,EAAA,CAtDKD,oBAAoB;EAAA,QACPL,SAAS,EAKPD,WAAW;AAAA;AAAAiC,EAAA,GAN1B3B,oBAAoB;AAwD1B,eAAeA,oBAAoB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}