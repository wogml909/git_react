{"ast":null,"code":"export const formatDate = isoDateString => {\n  const date = new Date(isoDateString);\n\n  // 1️⃣ 포맷 option 으로 지정하기\n  // const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true, timeZone: 'Asia/Seoul'   };\n  // return date.toLocaleString('ko-KR', options);\n\n  // 2️⃣ 포맷 형식으로 지정하기\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  const seconds = String(date.getSeconds()).padStart(2, '0');\n  return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\n};","map":{"version":3,"names":["formatDate","isoDateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds"],"sources":["C:/Users/zz909/git/react/React_TJE/board/client/src/apis/format.js"],"sourcesContent":["\r\nexport const formatDate = (isoDateString) => {\r\n    const date = new Date(isoDateString);\r\n\r\n    // 1️⃣ 포맷 option 으로 지정하기\r\n    // const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true, timeZone: 'Asia/Seoul'   };\r\n    // return date.toLocaleString('ko-KR', options);\r\n\r\n    // 2️⃣ 포맷 형식으로 지정하기\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\r\n\r\n};"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAIC,aAAa,IAAK;EACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,aAAa,CAAC;;EAEpC;EACA;EACA;;EAEA;EACA,MAAMG,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACL,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACL,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,MAAMG,KAAK,GAAGL,MAAM,CAACL,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,MAAMK,OAAO,GAAGP,MAAM,CAACL,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMO,OAAO,GAAGT,MAAM,CAACL,IAAI,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,IAAGE,KAAM,IAAGE,OAAQ,IAAGE,OAAQ,EAAC;AAEnE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}