{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zz909\\\\git\\\\react\\\\React_TJE\\\\board\\\\client\\\\src\\\\containers\\\\BoardListContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as boards from '../apis/boards';\nimport BoardList from '../components/BoardList/BoardList';\n\n// 👩‍💻 게시글 목록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardListContainer = () => {\n  _s();\n  // state 설정\n  const [boardList, setBoardList] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  // 🎁 게시글 목록 데이터\n  const getBoardList = async () => {\n    setLoading(true);\n    const response = await boards.list();\n    const data = await response.data;\n    console.log(data);\n    setBoardList(data);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getBoardList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BoardList, {\n    boardList: boardList,\n    isLoading: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(BoardListContainer, \"mEwxsGnfdipCwQeGJQCQme14fSU=\");\n_c = BoardListContainer;\nexport default BoardListContainer;\nvar _c;\n$RefreshReg$(_c, \"BoardListContainer\");","map":{"version":3,"names":["React","useEffect","useState","boards","BoardList","jsxDEV","_jsxDEV","BoardListContainer","_s","boardList","setBoardList","isLoading","setLoading","getBoardList","response","list","data","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zz909/git/react/React_TJE/board/client/src/containers/BoardListContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport * as boards from '../apis/boards'\r\nimport BoardList from '../components/BoardList/BoardList'\r\n\r\n// 👩‍💻 게시글 목록\r\nconst BoardListContainer = () => {\r\n\r\n  // state 설정\r\n  const [boardList, setBoardList] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // 🎁 게시글 목록 데이터\r\n  const getBoardList = async () => {\r\n    setLoading(true);\r\n    const response = await boards.list();\r\n    const data = await response.data;\r\n    console.log(data);\r\n    setBoardList(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect( () => {\r\n    getBoardList();\r\n  }, [])\r\n\r\n\r\n  return <BoardList boardList={boardList} \r\n                    isLoading={isLoading} />\r\n}\r\n\r\nexport default BoardListContainer   "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,MAAM,MAAM,gBAAgB;AACxC,OAAOC,SAAS,MAAM,mCAAmC;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE/B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,QAAQ,GAAG,MAAMX,MAAM,CAACY,IAAI,CAAC,CAAC;IACpC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;IAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBN,YAAY,CAACM,IAAI,CAAC;IAClBJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDX,SAAS,CAAE,MAAM;IACfY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAOP,OAAA,CAACF,SAAS;IAACK,SAAS,EAAEA,SAAU;IACrBE,SAAS,EAAEA;EAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C,CAAC;AAAAd,EAAA,CAvBKD,kBAAkB;AAAAgB,EAAA,GAAlBhB,kBAAkB;AAyBxB,eAAeA,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}